{"version":3,"sources":["components/WorkerForm.js","components/WorkerList.js","components/Tinder.js","App.js","reportWebVitals.js","index.js"],"names":["WorkerForm","state","newWorker","name","mail","description","tagi","onChange","event","newName","newMail","newDecription","newTagi","target","value","setState","onClick","props","adder","errorInput1","errorInput2","this","showWarning1","style","color","showWarning2","class","className","htmlFor","type","id","placeholder","row","React","Component","WorkerItem","visible","tagListRender","join","text","WorkerSearch","valSearchName","valSearchMail","funcOnChange","WorkerList","fullTagList","searchName","searchMail","handleInputChange","iSearchName","iSearchMail","copyList","workerList","slice","i","length","includes","listRender","map","it","str","hash","charCodeAt","hashCode","valMailName","Tinder","localeCompare","concat","path","exact","App","basename","process","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e40c179f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass WorkerForm extends React.Component{\r\n    state ={\r\n        newWorker:{\r\n            name:\"\",\r\n            mail:\"\",\r\n            description:\"\",\r\n            tagi:[\"Python\"]\r\n        },\r\n    }\r\n    onChange = (event) =>{\r\n        let newName=this.state.newWorker.name;\r\n        let newMail=this.state.newWorker.mail;\r\n        let newDecription=this.state.newWorker.description;\r\n        let newTagi=this.state.newWorker.tagi;\r\n        if(event.target.name===\"name\") newName=event.target.value;\r\n        else if (event.target.name===\"mail\")  newMail=event.target.value;\r\n        else if(event.target.name===\"description\") newDecription=event.target.value;\r\n        this.setState({\r\n            newWorker:{\r\n                name: newName,\r\n                mail: newMail,\r\n                description: newDecription,\r\n                tagi: newTagi\r\n            }\r\n        });\r\n    }\r\n    onClick = () =>{\r\n        this.props.adder(this.state.newWorker);\r\n        this.setState({\r\n            newWorker:{\r\n                name:\"\",\r\n                mail:\"\",\r\n                description:\"\",\r\n                tagi:[\"Python\"]\r\n            }\r\n        });\r\n    }\r\n    errorInput1=\"Podaj inny adres Email\";\r\n    errorInput2=\"Potrzebny jest email\";\r\n    render() {\r\n        return(\r\n            <>\r\n            {this.props.showWarning1 && <h1 style={{color:\"red\"}}>{this.errorInput1}</h1>}\r\n            {this.props.showWarning2 && <h1 style={{color:\"red\"}}>{this.errorInput2}</h1>}\r\n            <div class=\"container-sm\">\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-6\">\r\n                    <label htmlFor=\"newWorkerName\">Imie i nazwisko studenta:</label>\r\n                    <input type=\"text\" \r\n                    className=\"form-control\"\r\n                    name=\"name\" \r\n                    id=\"newWorkerName\" \r\n                    placeholder=\"Imie i Nazwisko\" \r\n                    value={this.state.newWorker.name}\r\n                    onChange={this.onChange}>\r\n                    </input>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                    <label htmlFor=\"newWorkerMail\">Mail studenta:</label>\r\n                    <input type=\"mail\" \r\n                    className=\"form-control\"\r\n                    name=\"mail\" \r\n                    id=\"newWorkerMail\" \r\n                    placeholder=\"Mail\" \r\n                    value={this.state.newWorker.mail}\r\n                    onChange={this.onChange}>\r\n                    </input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"newWorkerDescription\">Opis studenta:</label>\r\n                    <input className=\"form-control\"\r\n                    name=\"description\" \r\n                    id=\"newWorkerDescription\" \r\n                    row=\"3\" \r\n                    value={this.state.newWorker.description}\r\n                    onChange={this.onChange}>\r\n                    </input>\r\n                </div>\r\n                <button className=\"btn btn-primary\"  onClick={this.onClick}>Utw√≥rz nowego studenta</button>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default WorkerForm;","import React from 'react'\r\n\r\nfunction hashCode(str){\r\n    let hash=0;\r\n    if (str.length == 0) return hash;\r\n    for (let i = 0; i < str.length; i++){\r\n        let char = str.charCodeAt(i);\r\n        hash = ((hash << 5)- hash) + char;\r\n        hash = hash & hash;\r\n    }\r\n    return hash;\r\n}\r\n\r\nconst WorkerItem = (props) =>{\r\n    if(props.visible){\r\n        const tagListRender=props.tagi.join(\", \")\r\n        return(\r\n        <li className=\"list-group-item\">\r\n        <div><p>{props.text.name} ({props.text.mail})</p></div>\r\n        <div>{props.text.description}</div>\r\n        <div>Tagi: {tagListRender}</div>\r\n        </li>)\r\n    }\r\n    return null\r\n}\r\n\r\nconst WorkerSearch = (props) =>{\r\n    const {valSearchName, valSearchMail, funcOnChange} = props\r\n    return(<>\r\n    <div class=\"container-sm\">\r\n    <input type=\"text\" \r\n                className=\"form-control\"\r\n                name=\"searchName\" \r\n                id=\"searchName\" \r\n                placeholder=\"Znajd≈∫ po imieniu...\" \r\n                value={valSearchName}\r\n                onChange={funcOnChange}\r\n               >\r\n    </input>\r\n    <input type=\"text\" \r\n        className=\"form-control\"\r\n        name=\"searchMail\" \r\n        id=\"searchMail\" \r\n        placeholder=\"Znajd≈∫ po mailu...\" \r\n        value={valSearchMail}\r\n        onChange={funcOnChange}\r\n       >\r\n    </input>\r\n    </div>\r\n    </>)\r\n}\r\n\r\nclass WorkerList extends React.Component{\r\n    state ={\r\n        fullTagList:[\"Python\",\"Java\",\"HTML\",\"C#\"],\r\n        newWorker:{\r\n            name:\"\",\r\n            mail:\"\",\r\n            description:\"\",\r\n            tagi:[\"Python\"]\r\n        },\r\n        searchName:\"\",\r\n        searchMail:\"\",\r\n    }\r\n    errorInput1=\"Podaj inny adres Email\";\r\n    errorInput2=\"Potrzebny jest email\";\r\n    handleInputChange= (event) =>{\r\n        if(event.target.name==\"searchName\" || event.target.name==\"searchMail\"){\r\n            let iSearchName=this.state.searchName;\r\n            let iSearchMail=this.state.searchMail;\r\n            if(event.target.name===\"searchName\") iSearchName=event.target.value;\r\n            else iSearchMail=event.target.value;\r\n            this.setState({\r\n                searchName: iSearchName,\r\n                searchMail: iSearchMail,\r\n            });\r\n            let copyList=this.state.workerList.slice();\r\n            for(let i =0; i< this.state.workerList.length;i++){\r\n                if((this.state.searchName===\"\" || this.state.workerList[i].name.includes(iSearchName)) &&\r\n                (this.state.searchMail===\"\" || this.state.workerList[i].mail.includes(iSearchMail))){\r\n                    copyList[i].visible=true;\r\n                }\r\n                else copyList[i].visible=false;\r\n            }\r\n            this.setState({\r\n                workerList: copyList\r\n            })\r\n        }\r\n        else{\r\n            let newName=this.state.newWorker.name;\r\n            let newMail=this.state.newWorker.mail;\r\n            let newDecription=this.state.newWorker.description;\r\n            let newTagi=this.state.newWorker.tagi;\r\n            if(event.target.name===\"name\") newName=event.target.value;\r\n            else if (event.target.name===\"mail\")  newMail=event.target.value;\r\n            else if(event.target.name===\"description\") newDecription=event.target.value;\r\n            this.setState({\r\n            newWorker:{\r\n                name: newName,\r\n                mail: newMail,\r\n                description: newDecription,\r\n                tagi: newTagi\r\n            }\r\n        });\r\n        }\r\n    }\r\n    render() {\r\n        const listRender=this.props.workerList.map((it) => (\r\n            <WorkerItem key={hashCode(it.mail)} text={it} tagi={it.tagi} visible={it.visible}/>))\r\n        return (\r\n            <>\r\n            <WorkerSearch \r\n            valSearchName={this.state.searchName}\r\n            valMailName={this.state.searchMail}\r\n            funcOnChange={this.handleInputChange}\r\n            />\r\n            <br></br>\r\n            <div class=\"container-sm\"><ul>{listRender}</ul></div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WorkerList;","import React from 'react';\r\nimport {Switch,Route} from 'react-router-dom';\r\n\r\nimport WorkerForm from './WorkerForm';\r\nimport WorkerList from './WorkerList';\r\n\r\nclass Tinder extends React.Component{\r\n    state ={\r\n        workerList:[ {name:\"Maciej B≈Ço≈Ñski\",\r\n        mail:\"maciej.blonski@cosiek.pl\",\r\n        description:\"Programista z 5 letnim do≈õwiadczeniem\",\r\n        tagi:[\"Pyhton\"],\r\n        visible: true\r\n        },\r\n        {name:\"Kamil Szewczyk\",\r\n        mail:\"kamil.szewczyk@cosiek.pl\",\r\n        description:\"Programista z 10 letnim do≈õwiadczeniem\",\r\n        tagi:[\"Java\", \"HTML\"],\r\n        visible: true\r\n        },\r\n        {name:\"Stanis≈Çaw Koz≈Çowski\",\r\n        mail:\"stanislaw.kozlowski@cosiek.pl\",\r\n        description:\"Programista z 8 letnim do≈õwiadczeniem\",\r\n        tagi:[\"Java\", \"HTML\",\"C#\"],\r\n        visible: true\r\n        },\r\n        {name:\"Kasia Kowalska\",\r\n        mail:\"kasia.kowalska@cosiek.pl\",\r\n        description:\"Programistka z 10 letnim do≈õwiadczeniem\",\r\n        tagi:[\"HTML\", \"Java\",\"C#\"],\r\n        visible: true\r\n        },\r\n        {name:\"Wojciech Mak\",\r\n        mail:\"wojciech.mak@cosiek.pl\",\r\n        description:\"Programista z 10 letnim do≈õwiadczeniem\",\r\n        tagi:[\"HTML\", \"Java\",\"C#\"],\r\n        visible: true\r\n        },\r\n        ],\r\n        showWarning1: false,\r\n        showWarning2: false\r\n    }\r\n\r\n    adder = (newWorker) =>{\r\n        for(let i =0; i< this.state.workerList.length;i++){\r\n            if (this.state.workerList[i].mail.localeCompare(newWorker.mail)===0){\r\n                this.setState({\r\n                    showWarning1: true,\r\n                    showWarning2: false\r\n                })\r\n                return\r\n            }\r\n        }\r\n        if (newWorker.mail===\"\"){\r\n            this.setState({\r\n                showWarning1: false,\r\n                showWarning2: true\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                workerList: this.state.workerList.concat(({\r\n                    name: newWorker.name,\r\n                    mail: newWorker.mail,\r\n                    description: newWorker.description,\r\n                    tagi: newWorker.tagi,\r\n                    visible: true\r\n                })),\r\n                newWorker:{\r\n                    name:\"\",\r\n                    mail:\"\",\r\n                    description:\"\",\r\n                },\r\n                showWarning1: false,\r\n                showWarning2: false\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Switch>\r\n              <Route path=\"/\" exact>\r\n                <section>\r\n                  <WorkerList workerList={this.state.workerList}/>\r\n                </section>\r\n              </Route>\r\n              <Route path=\"/new\">\r\n                <section>\r\n                  <WorkerForm adder={this.adder}\r\n                  showWarning1={this.showWarning1}\r\n                  showWarning2={this.showWarning2}/>\r\n                  </section>\r\n              </Route>\r\n              <Route>\r\n                <section>\r\n                  <h2>Error 404: Page not found</h2>\r\n                </section>\r\n              </Route>\r\n          </Switch>\r\n        );\r\n    }\r\n}\r\nexport default Tinder;","import './App.css';\n\nimport {BrowserRouter as Router, Link as NavLink} from 'react-router-dom';\n\nimport Tinder from './components/Tinder';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n        <header>Tinder do projekt√≥w</header>\n        <main>\n            <nav>\n                <NavLink to=\"/\" exact>Lista ofert</NavLink>\n                <NavLink to=\"/new\">Dodaj nowy</NavLink>\n            </nav>\n          <Tinder/>\n        </main>\n    </Router>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}