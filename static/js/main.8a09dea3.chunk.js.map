{"version":3,"sources":["firebase.js","components/Navigate.js","components/Login.js","components/WorkerForm.js","components/WorkerList.js","components/Register.js","components/Tinder.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","app","lenght","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","database","Navigate","useState","user","setUser","useEffect","unsubscribe","onAuthStateChanged","u","console","log","to","exact","href","className","onClick","signOut","Login","email","setEmail","password","setPassword","redirect","setRedirect","placeholder","value","onChange","e","target","type","signInWithEmailAndPassword","then","catch","error","WorkerForm","name","setName","description","setDescription","htmlFor","id","row","workerBase","ref","worker","push","WorkerItem","props","text","WorkerList","workerList","setWorkerList","on","snapshot","workers","val","class","map","it","index","Register","displayName","setDisplayName","createUserWithEmailAndPassword","loggedUser","updateProfile","Tinder","state","mail","tagi","visible","showWarning1","showWarning2","adder","newWorker","i","length","localeCompare","setState","concat","path","this","React","Component","App","basename","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAeMA,IAASC,IAAIC,OAIbF,IAASC,MAHTD,IAASG,cAZM,CACjBC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qEACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAUX,IAAMC,EAAOZ,IAASY,OAChBC,EAAWb,IAASa,W,OCanBC,EAhCE,WACb,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACN,IAAMC,EAAcP,EAAKQ,oBAAmB,SAACC,GACrCA,EACAJ,EAAQI,GAGRC,QAAQC,IAAI,qCAGpB,OAAO,kBAAMJ,QAKjB,OAAIH,EACO,gCACH,cAAC,IAAD,CAASQ,GAAG,IAAZ,mBACA,cAAC,IAAD,CAASA,GAAG,UAAUC,OAAK,EAA3B,yBACA,cAAC,IAAD,CAASD,GAAG,OAAZ,wBACA,mBAAGE,KAAK,IAAIC,UAAU,aAAaC,QAR5B,WACXhB,EAAKiB,WAOD,wBAID,gCACH,cAAC,IAAD,CAASL,GAAG,IAAZ,mBACA,cAAC,IAAD,CAASA,GAAG,SAAZ,qBACA,cAAC,IAAD,CAASA,GAAG,YAAZ,6B,uCCUOM,EAtCD,WACV,MAA0Bf,mBAAS,IAAnC,mBAAOgB,EAAP,KAAcC,EAAd,KACA,EAAgCjB,mBAAS,IAAzC,mBAAOkB,EAAP,KAAiBC,EAAjB,KACA,EAAgCnB,oBAAS,GAAzC,mBAAOoB,EAAP,KAAiBC,EAAjB,KAWA,OAAID,EACO,cAAC,IAAD,CAAUX,GAAG,MAGpB,sBAAKG,UAAU,OAAf,UACI,uBACAA,UAAU,aACVU,YAAY,QACZC,MAAOP,EACPQ,SAAU,SAAAC,GAAC,OAAIR,EAASQ,EAAEC,OAAOH,UAGjC,uBACAX,UAAU,aACVU,YAAY,aACZK,KAAK,WACLJ,MAAOL,EACPM,SAAU,SAAAC,GAAC,OAAIN,EAAYM,EAAEC,OAAOH,UAEpC,wBAAQV,QA5BF,WACVhB,EAAK+B,2BAA2BZ,EAAOE,GAAUW,MAAK,WACjDtB,QAAQC,IAAI,cACZa,GAAY,MAEhBS,OAAO,SAAAC,GACJxB,QAAQC,IAAIuB,OAsBZ,yBCyBGC,EA5DI,WACf,MAAwBhC,mBAAS,IAAjC,mBAAOiC,EAAP,KAAaC,EAAb,KACA,EAA0BlC,mBAAS,IAAnC,mBAAOgB,EAAP,KAAcC,EAAd,KACA,EAAsCjB,mBAAS,IAA/C,mBAAOmC,EAAP,KAAoBC,EAApB,KAcA,OACI,mCACA,sBAAKxB,UAAU,eAAf,UACI,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,sBAAf,UACA,uBAAOyB,QAAQ,gBAAf,uCACA,uBAAOV,KAAK,OACZf,UAAU,eACVqB,KAAK,OACLK,GAAG,gBACHhB,YAAY,kBACZC,MAAOU,EACPT,SAAU,SAAAC,GAAC,OAAIS,EAAQT,EAAEC,OAAOH,aAGhC,sBAAKX,UAAU,sBAAf,UACA,uBAAOyB,QAAQ,gBAAf,4BACA,uBAAOV,KAAK,OACZf,UAAU,eACVqB,KAAK,OACLK,GAAG,gBACHhB,YAAY,OACZC,MAAOP,EACPQ,SAAU,SAAAC,GAAC,OAAIR,EAASQ,EAAEC,OAAOH,gBAIrC,sBAAKX,UAAU,aAAf,UACI,uBAAOyB,QAAQ,uBAAf,4BACA,uBAAOzB,UAAU,eACjBqB,KAAK,cACLK,GAAG,uBACHC,IAAI,IACJhB,MAAOY,EACPX,SAAU,SAAAC,GAAC,OAAIW,EAAeX,EAAEC,OAAOH,aAG3C,wBAAQX,UAAU,kBAAmBC,QAjD7B,WACZ,IAAM2B,EAAa1C,EAAS2C,IAAI,cAC1BC,EAAS,CACXT,OACAjB,QACAmB,eAEJK,EAAWG,KAAKD,GAChBR,EAAQ,IACRjB,EAAS,IACTmB,EAAe,KAuCX,6CC3CZ,IAAMQ,EAAa,SAACC,GAEhB,OACA,qBAAIjC,UAAU,kBAAd,UACA,8BAAK,8BAAIiC,EAAMC,KAAKb,KAAf,KAAuBY,EAAMC,KAAK9B,MAAlC,SACL,8BAAM6B,EAAMC,KAAKX,cACjB,mDA+FWY,EAjEI,WACf,MAAmC/C,mBAAS,IAA5C,mBAAOgD,EAAP,KAAkBC,EAAlB,KA0DA,OAxDD9C,qBAAW,WACUL,EAAS2C,IAAI,cACnBS,GAAG,SAAS,SAACC,GACpB,IAAMC,EAAUD,EAASE,MACnBL,EAAa,GACtB,IAAK,IAAIV,KAAMc,EACXJ,EAAWL,KAAKS,EAAQd,IAE5B/B,QAAQC,IAAIwC,GACZC,EAAcD,QAEhB,IA8CM,qBAAKM,MAAM,eAAX,SAA2BN,EAAaA,EAAWO,KAAI,SAACC,GAAD,OACnD,cAAC,EAAD,CAA2BV,KAAMU,GAAhBA,EAAGC,UAAuB,M,QChD5CC,EA1DE,WAAO,IAAD,EACnB,EAA0B1D,mBAAS,IAAnC,mBAAOgB,EAAP,KAAcC,EAAd,KACA,EAAgCjB,mBAAS,IAAzC,mBAAOkB,EAAP,KAAiBC,EAAjB,KACA,EAAsCnB,mBAAS,IAA/C,mBAAO2D,EAAP,KAAoBC,EAApB,KACA,EAAgC5D,oBAAS,GAAzC,mBAAOoB,EAAP,KAAiBC,EAAjB,KAcA,OAAID,EACO,cAAC,IAAD,CAAUX,GAAG,MAGpB,sBAAKG,UAAU,OAAf,UACI,uBAAOyB,QAAQ,aAAf,qCACA,uBACAC,GAAG,aACHX,KAAK,WACLf,UAAU,aACVU,YAAY,yBACZC,MAAOoC,EACPnC,SAAU,SAAAC,GAAC,OAAImC,EAAenC,EAAEC,OAAOH,UAEvC,uBAAOc,QAAQ,QAAf,oBACA,uBACAC,GAAG,QACHX,KAAK,QACLM,KAAK,QACLrB,UAAU,aACVU,YAAY,QACZC,MAAOP,EACPQ,SAAU,SAAAC,GAAC,OAAIR,EAASQ,EAAEC,OAAOH,UAEjC,uBAAOc,QAAQ,QAAf,oBACA,0BACAC,GAAG,WACHX,KAAK,WACLM,KAAK,WACLrB,UAAU,aACVU,YAAY,cALZ,qBAMK,YANL,sBAOOJ,GAPP,0BAQU,SAAAO,GAAC,OAAIN,EAAYM,EAAEC,OAAOH,UARpC,IAUA,wBAAQV,QA/CC,WACbhB,EAAKgE,+BAA+B7C,EAAOE,GAC1CW,MAAK,SAAAiC,GACFA,EAAW7D,KAAK8D,cAAc,CAC1BJ,YAAaA,IAEjBtC,GAAY,MAEfS,OAAO,SAAAC,GACJxB,QAAQC,IAAIuB,OAsCZ,4CCiDGiC,E,4MAhGXC,MAAO,CACHjB,WAAW,CAAE,CAACf,KAAK,2BACnBiC,KAAK,2BACL/B,YAAY,6CACZgC,KAAK,CAAC,UACNC,SAAS,GAET,CAACnC,KAAK,iBACNiC,KAAK,2BACL/B,YAAY,8CACZgC,KAAK,CAAC,OAAQ,QACdC,SAAS,GAET,CAACnC,KAAK,gCACNiC,KAAK,gCACL/B,YAAY,6CACZgC,KAAK,CAAC,OAAQ,OAAO,MACrBC,SAAS,GAET,CAACnC,KAAK,iBACNiC,KAAK,2BACL/B,YAAY,+CACZgC,KAAK,CAAC,OAAQ,OAAO,MACrBC,SAAS,GAET,CAACnC,KAAK,eACNiC,KAAK,yBACL/B,YAAY,8CACZgC,KAAK,CAAC,OAAQ,OAAO,MACrBC,SAAS,IAGTC,cAAc,EACdC,cAAc,G,EAGlBC,MAAQ,SAACC,GACL,IAAI,IAAIC,EAAG,EAAGA,EAAG,EAAKR,MAAMjB,WAAW0B,OAAOD,IAC1C,GAAkE,IAA9D,EAAKR,MAAMjB,WAAWyB,GAAGP,KAAKS,cAAcH,EAAUN,MAKtD,YAJA,EAAKU,SAAS,CACVP,cAAc,EACdC,cAAc,IAKL,KAAjBE,EAAUN,KACV,EAAKU,SAAS,CACVP,cAAc,EACdC,cAAc,IAIlB,EAAKM,SAAS,CACV5B,WAAY,EAAKiB,MAAMjB,WAAW6B,OAAQ,CACtC5C,KAAMuC,EAAUvC,KAChBiC,KAAMM,EAAUN,KAChB/B,YAAaqC,EAAUrC,YACvBgC,KAAMK,EAAUL,KAChBC,SAAS,IAEbI,UAAU,CACNvC,KAAK,GACLiC,KAAK,GACL/B,YAAY,IAEhBkC,cAAc,EACdC,cAAc,K,4CAI1B,WACI,OACI,eAAC,IAAD,WACA,cAAC,IAAD,CAAOQ,KAAK,IAAIpE,OAAK,IACnB,cAAC,IAAD,CAAOoE,KAAK,UAAUpE,OAAK,EAA3B,SACM,cAAC,EAAD,CAAYsC,WAAY+B,KAAKd,MAAMjB,eAEzC,cAAC,IAAD,CAAO8B,KAAK,SAASpE,OAAK,EAA1B,SACM,cAAC,EAAD,MAEN,cAAC,IAAD,CAAOoE,KAAK,YAAYpE,OAAK,EAA7B,SACM,cAAC,EAAD,MAEN,cAAC,IAAD,CAAOoE,KAAK,OAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,UACE,kCACE,sE,GA3FGE,IAAMC,WCUZC,MAZf,WACE,OACE,eAAC,IAAD,CAAQC,SAAUC,eAAlB,UACI,4DACA,iCACE,cAAC,EAAD,IACA,cAAC,EAAD,WCDKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1D,MAAK,YAAkD,IAA/C2D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8a09dea3.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport 'firebase/auth';\r\nimport \"firebase/database\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBW2YM-HQiOGt1j9jibRYMNPY95naS7hzE\",\r\n    authDomain: \"lab7-tinder.firebaseapp.com\",\r\n    databaseURL: \"https://lab7-tinder-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"lab7-tinder\",\r\n    storageBucket: \"lab7-tinder.appspot.com\",\r\n    messagingSenderId: \"483700471976\",\r\n    appId: \"1:483700471976:web:51f99793e1783fceaeaa9d\",\r\n    measurementId: \"G-WGBB5J6SPJ\"\r\n  };\r\n\r\n  if(!firebase.app.lenght) {\r\n      firebase.initializeApp(firebaseConfig);\r\n  }\r\n  else{\r\n      firebase.app();\r\n  }\r\n\r\n export const auth = firebase.auth();\r\n export const database = firebase.database();\r\n  //export const firestore = firebase.firestore();","import { NavLink, Link } from 'react-router-dom';\r\nimport { auth } from '../firebase';\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst Navigate = () => {\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged((u) => {\r\n            if (u) {\r\n                setUser(u);\r\n            }\r\n            else {\r\n                console.log(\"Użytkownik nie znaleziony\")\r\n            }\r\n        });\r\n        return () => unsubscribe();\r\n    })\r\n    const logout = () =>{\r\n        auth.signOut()\r\n    }\r\n    if (user){\r\n        return(<nav>\r\n            <NavLink to=\"/\">Start</NavLink>\r\n            <NavLink to=\"/oferty\" exact>Lista ofert</NavLink>\r\n            <NavLink to=\"/new\">Dodaj nowy</NavLink>\r\n            <a href=\"/\" className=\"nav-button\" onClick={logout}>Wyloguj</a>\r\n        </nav>)\r\n    }\r\n\r\n    return(<nav>\r\n        <NavLink to=\"/\">Start</NavLink>\r\n        <NavLink to=\"/login\">Zaloguj</NavLink>\r\n        <NavLink to=\"/register\">Zarejestruj</NavLink>\r\n    </nav>)\r\n}\r\nexport default Navigate;","import { auth } from '../firebase';\r\n\r\nimport { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    const login = () => {\r\n        auth.signInWithEmailAndPassword(email, password).then(() => {\r\n             console.log(\"Zalogowano\");\r\n             setRedirect(true);\r\n        })\r\n        .catch( error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n    if (redirect){\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    return (\r\n        <div className=\"form\">\r\n            <input \r\n            className=\"form-input\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n            />\r\n\r\n            <input\r\n            className=\"form-input\"\r\n            placeholder=\"Hasło\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n            />\r\n            <button onClick={login}>Zaloguj</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, {useState} from 'react';\r\nimport {database} from '../firebase';\r\n\r\nconst WorkerForm = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n\r\n    const onClick = () =>{\r\n        const workerBase = database.ref('WorkerBase');\r\n        const worker = {\r\n            name,\r\n            email,\r\n            description\r\n        }\r\n        workerBase.push(worker)\r\n        setName(\"\")\r\n        setEmail(\"\")\r\n        setDescription(\"\")\r\n    }\r\n    return(\r\n        <>\r\n        <div className=\"container-sm\">\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                <label htmlFor=\"newWorkerName\">Imie i nazwisko studenta:</label>\r\n                <input type=\"text\" \r\n                className=\"form-control\"\r\n                name=\"name\" \r\n                id=\"newWorkerName\" \r\n                placeholder=\"Imie i Nazwisko\" \r\n                value={name}\r\n                onChange={e => setName(e.target.value)}>\r\n                </input>\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                <label htmlFor=\"newWorkerMail\">Mail studenta:</label>\r\n                <input type=\"mail\" \r\n                className=\"form-control\"\r\n                name=\"mail\" \r\n                id=\"newWorkerMail\" \r\n                placeholder=\"Mail\" \r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}>\r\n                </input>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"newWorkerDescription\">Opis studenta:</label>\r\n                <input className=\"form-control\"\r\n                name=\"description\" \r\n                id=\"newWorkerDescription\" \r\n                row=\"3\" \r\n                value={description}\r\n                onChange={e => setDescription(e.target.value)}>\r\n                </input>\r\n            </div>\r\n            <button className=\"btn btn-primary\"  onClick={onClick}>Utwórz nowego studenta</button>\r\n         </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default WorkerForm;","import React, {useState, useEffect} from 'react'\r\nimport {database} from '../firebase';\r\n\r\nfunction hashCode(str){\r\n    let hash=0;\r\n    if (str.length == 0) return hash;\r\n    for (let i = 0; i < str.length; i++){\r\n        let char = str.charCodeAt(i);\r\n        hash = ((hash << 5)- hash) + char;\r\n        hash = hash & hash;\r\n    }\r\n    return hash;\r\n}\r\n\r\nconst WorkerItem = (props) =>{\r\n    //const tagListRender=props.tagi.join(\", \")\r\n    return(\r\n    <li className=\"list-group-item\">\r\n    <div><p>{props.text.name} ({props.text.email})</p></div>\r\n    <div>{props.text.description}</div>\r\n    <div>Tagi: Python</div>\r\n    </li>)\r\n}\r\n\r\nconst WorkerSearch = (props) =>{\r\n    const {valSearchName, valSearchMail, funcOnChange} = props\r\n    return(<>\r\n    <div class=\"container-sm\">\r\n    <input type=\"text\" \r\n                className=\"form-control\"\r\n                name=\"searchName\" \r\n                id=\"searchName\" \r\n                placeholder=\"Znajdź po imieniu...\" \r\n                value={valSearchName}\r\n                onChange={funcOnChange}\r\n               >\r\n    </input>\r\n    <input type=\"text\" \r\n        className=\"form-control\"\r\n        name=\"searchMail\" \r\n        id=\"searchMail\" \r\n        placeholder=\"Znajdź po mailu...\" \r\n        value={valSearchMail}\r\n        onChange={funcOnChange}\r\n       >\r\n    </input>\r\n    </div>\r\n    </>)\r\n}\r\n\r\nconst WorkerList = () => {\r\n    const [workerList,setWorkerList] = useState(\"\");\r\n\r\n   useEffect (() => {\r\n       const workerBase=database.ref(\"WorkerBase\")\r\n       workerBase.on('value', (snapshot) => {\r\n           const workers = snapshot.val();\r\n           const workerList = [];\r\n        for (let id in workers){\r\n            workerList.push(workers[id])\r\n        }\r\n        console.log(workerList)\r\n        setWorkerList(workerList)\r\n       })\r\n   }, []);\r\n\r\n   /*handleInputChange= (event) =>{\r\n        if(event.target.name==\"searchName\" || event.target.name==\"searchMail\"){\r\n            let iSearchName=this.state.searchName;\r\n            let iSearchMail=this.state.searchMail;\r\n            if(event.target.name===\"searchName\") iSearchName=event.target.value;\r\n            else iSearchMail=event.target.value;\r\n            this.setState({\r\n                searchName: iSearchName,\r\n                searchMail: iSearchMail,\r\n            });\r\n            let copyList=this.state.workerList.slice();\r\n            for(let i =0; i< this.state.workerList.length;i++){\r\n                if((this.state.searchName===\"\" || this.state.workerList[i].name.includes(iSearchName)) &&\r\n                (this.state.searchMail===\"\" || this.state.workerList[i].mail.includes(iSearchMail))){\r\n                    copyList[i].visible=true;\r\n                }\r\n                else copyList[i].visible=false;\r\n            }\r\n            this.setState({\r\n                workerList: copyList\r\n            })\r\n        }\r\n        else{\r\n            let newName=this.state.newWorker.name;\r\n            let newMail=this.state.newWorker.mail;\r\n            let newDecription=this.state.newWorker.description;\r\n            let newTagi=this.state.newWorker.tagi;\r\n            if(event.target.name===\"name\") newName=event.target.value;\r\n            else if (event.target.name===\"mail\")  newMail=event.target.value;\r\n            else if(event.target.name===\"description\") newDecription=event.target.value;\r\n            this.setState({\r\n            newWorker:{\r\n                name: newName,\r\n                mail: newMail,\r\n                description: newDecription,\r\n                tagi: newTagi\r\n            }\r\n        });\r\n        }\r\n    }*/\r\n\r\n   // const listRender= workerList.map((it) => (\r\n    //        <WorkerItem key={hashCode(it.mail)} text={it} visible={true}/>))\r\n    return (\r\n            <div class=\"container-sm\">{workerList ? workerList.map((it) => (\r\n                <WorkerItem key={it.index} text={it}/>)) : ''}</div>\r\n        );\r\n}\r\n\r\nexport default WorkerList;","import { auth } from '../firebase';\r\n\r\nimport { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Register = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [displayName, setDisplayName] = useState(\"\");\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    const register = () => {\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n        .then(loggedUser => {\r\n            loggedUser.user.updateProfile({\r\n                displayName: displayName,\r\n            })\r\n            setRedirect(true);\r\n        })\r\n        .catch( error => {\r\n            console.log(error);\r\n        })\r\n    }\r\n    if (redirect){\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    return (\r\n        <div className=\"form\">\r\n            <label htmlFor=\"dispayName\">Nazwa użytkownika:</label>\r\n            <input\r\n            id=\"dispayName\"\r\n            type=\"username\"\r\n            className=\"form-input\"\r\n            placeholder=\"Nazwa użytkownika\"\r\n            value={displayName}\r\n            onChange={e => setDisplayName(e.target.value)}\r\n            />\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input \r\n            id=\"email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            className=\"form-input\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n            />\r\n            <label htmlFor=\"email\">Haslo:</label>\r\n            <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"form-input\"\r\n            placeholder=\"Hasło\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n            />\r\n            <button onClick={register}>Utwórz użytkownika</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport {Switch,Route} from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\nimport Login from './Login';\r\nimport WorkerForm from './WorkerForm';\r\nimport WorkerList from './WorkerList';\r\nimport Register from './Register';\r\n\r\nclass Tinder extends React.Component{\r\n\r\n    state ={\r\n        workerList:[ {name:\"Maciej Błoński\",\r\n        mail:\"maciej.blonski@cosiek.pl\",\r\n        description:\"Programista z 5 letnim doświadczeniem\",\r\n        tagi:[\"Pyhton\"],\r\n        visible: true\r\n        },\r\n        {name:\"Kamil Szewczyk\",\r\n        mail:\"kamil.szewczyk@cosiek.pl\",\r\n        description:\"Programista z 10 letnim doświadczeniem\",\r\n        tagi:[\"Java\", \"HTML\"],\r\n        visible: true\r\n        },\r\n        {name:\"Stanisław Kozłowski\",\r\n        mail:\"stanislaw.kozlowski@cosiek.pl\",\r\n        description:\"Programista z 8 letnim doświadczeniem\",\r\n        tagi:[\"Java\", \"HTML\",\"C#\"],\r\n        visible: true\r\n        },\r\n        {name:\"Kasia Kowalska\",\r\n        mail:\"kasia.kowalska@cosiek.pl\",\r\n        description:\"Programistka z 10 letnim doświadczeniem\",\r\n        tagi:[\"HTML\", \"Java\",\"C#\"],\r\n        visible: true\r\n        },\r\n        {name:\"Wojciech Mak\",\r\n        mail:\"wojciech.mak@cosiek.pl\",\r\n        description:\"Programista z 10 letnim doświadczeniem\",\r\n        tagi:[\"HTML\", \"Java\",\"C#\"],\r\n        visible: true\r\n        },\r\n        ],\r\n        showWarning1: false,\r\n        showWarning2: false\r\n    }\r\n\r\n    adder = (newWorker) =>{\r\n        for(let i =0; i< this.state.workerList.length;i++){\r\n            if (this.state.workerList[i].mail.localeCompare(newWorker.mail)===0){\r\n                this.setState({\r\n                    showWarning1: true,\r\n                    showWarning2: false\r\n                })\r\n                return\r\n            }\r\n        }\r\n        if (newWorker.mail===\"\"){\r\n            this.setState({\r\n                showWarning1: false,\r\n                showWarning2: true\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                workerList: this.state.workerList.concat(({\r\n                    name: newWorker.name,\r\n                    mail: newWorker.mail,\r\n                    description: newWorker.description,\r\n                    tagi: newWorker.tagi,\r\n                    visible: true\r\n                })),\r\n                newWorker:{\r\n                    name:\"\",\r\n                    mail:\"\",\r\n                    description:\"\",\r\n                },\r\n                showWarning1: false,\r\n                showWarning2: false\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Switch>\r\n            <Route path=\"/\" exact></Route>\r\n              <Route path=\"/oferty\" exact>\r\n                    <WorkerList workerList={this.state.workerList}/>\r\n              </Route>\r\n              <Route path=\"/login\" exact>\r\n                    <Login></Login>\r\n              </Route>\r\n              <Route path=\"/register\" exact>\r\n                    <Register></Register>\r\n              </Route>\r\n              <Route path=\"/new\">\r\n                  <WorkerForm/>\r\n              </Route>\r\n              <Route>\r\n                <section>\r\n                  <h2>Error 404: Page not found</h2>\r\n                </section>\r\n              </Route>\r\n          </Switch>\r\n        );\r\n    }\r\n}\r\nexport default Tinder;","import './App.css';\n\nimport {BrowserRouter as Router, Link as NavLink} from 'react-router-dom';\n\nimport Navigate from './components/Navigate';\nimport Tinder from './components/Tinder';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n        <header>Tinder do projektów</header>\n        <main>\n          <Navigate/>\n          <Tinder/>\n        </main>\n    </Router>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}